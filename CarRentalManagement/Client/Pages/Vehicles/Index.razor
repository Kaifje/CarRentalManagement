@page "/vehicles/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Kjøretøy</h3>
<hr />
<br />
<a href="/vehicles/create" class="btn btn-secondary">
    <span class="badge-pill pi-plus"></span>
    Sett inn nytt kjøretøy
</a>

<hr />
<br />

@if (Vehicles == null)
{
    <div class="alert alert-info">Laster kjøretøy ...</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Merke</th>
                <th>Model</th>
                <th>År</th>
                <th>Dagspris</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vehicle in Vehicles)
            {
                <tr>
                    <td>@vehicle.Make.Name</td>
                    <td>@vehicle.Model.Name</td>
                    <td>@vehicle.Year</td>
                    <td>@vehicle.RentalRate</td>
                    <td>
                        <a href="/Vehicles/view/@vehicle.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/Vehicles/edit/@vehicle.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(vehicle.Id))">
                            <span class="oi oi-delete"></span>
                        </button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<Vehicle> Vehicles;

    protected async override Task OnInitializedAsync()
    {
        Vehicles = await _client.GetFromJsonAsync<List<Vehicle>>($"{Endpoints.VehiclesEndpoint}");
    }

    private async Task Delete(int id)
    {
        var vehicle = Vehicles.First(x => x.Id == id);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Vil du slette {vehicle.Model.Name}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.VehiclesEndpoint}/{id}");
            await OnInitializedAsync();
        }

    }
}
